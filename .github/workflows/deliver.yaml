name: build, push and deploy
on:
  push: # will trigger workflow when push event
    branches:
      - inplace-deployment # will trigger when push to this branch
  pull_request: # will also trigger if PR is open

env:
  AWS_REGION: ca-central-1

jobs: # define two jobs, CI and CD
  # job1 - CI
  CI_build_model_image:
    runs-on: ubuntu-latest
    steps:
      - name: Dockerhub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: list files
        run: ls -l
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/breast_cancer_predictor:latest -f Dockerfile .
      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/breast_cancer_predictor:latest
  
  # job2 - CD
  CD_deploy_ec2:
    runs-on: ubuntu-latest
    needs: CI_build_model_image  # will depend on previous step `CI_build_model_image`
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master # use a 3rd-party action (remote deploy)
        # https://github.com/marketplace/actions/ssh-remote-commands
        with:
          host: ${{secrets.AWS_EC2_HOST}} # will login to your EC2 machine
          key: ${{secrets.AWS_EC2_SSH_PRIVATE_KEY}}
          username: ${{secrets.AWS_EC2_USER}}
          script: |
            whoami
            echo "Pull the latest image"
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/breast_cancer_predictor:latest
            echo "Stop and remove container"
            if docker ps -a --format '{{.Names}}' | grep -q '^breast_cancer_predictor$'; then
              docker stop breast_cancer_predictor && docker rm breast_cancer_predictor
            fi
            echo "Run the container"
            docker run -d -p 8000:8000 --name breast_cancer_predictor ${{ secrets.DOCKERHUB_USERNAME }}/breast_cancer_predictor:latest