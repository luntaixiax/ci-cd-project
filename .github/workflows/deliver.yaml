
name: build, push and deploy
on:
  push: # will trigger workflow when push event
    branches:
      - blue-green-deployment # will trigger when push to this branch
  pull_request: # will also trigger if PR is open

env:
  AWS_REGION: ca-central-1

jobs: # define two jobs, CI and CD
  # job1 - CI
  CI_build_model_image:
    runs-on: ubuntu-latest
    steps:
      - name: Dockerhub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: list files
        run: ls -l
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/breast_cancer_predictor:latest -f Dockerfile .
      - name: Push image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/breast_cancer_predictor:latest
  
  # job2 - CD
  CD_aws_codedeploy:
    runs-on: ubuntu-latest
    needs: CI_build_model_image
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ env.AWS_REGION }}
    - run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
